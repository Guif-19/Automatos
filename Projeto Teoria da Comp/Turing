#####################
# Maquina de Turing #
#####################
class MaquinaTuring:
    def __init__(self, estados, alfabeto_entrada, alfabeto_fita, marca_inicio, vazio, transicao, inicial, finais, fita):
        self.estados = estados
        self.alfabeto_entrada = alfabeto_entrada
        self.alfabeto_fita = alfabeto_fita
        self.marca_inicio = marca_inicio
        self.vazio = vazio
        self.transicao = transicao
        self.inicial = inicial
        self.finais = finais
        self.fita = [self.marca_inicio] + list(fita) + [self.vazio]
        self.cabeca = 1
        self.atual = self.inicial
    
    def executar(self, max_passos=999):
        passos = 0
        while self.atual not in self.finais and passos < max_passos:
            leitura = self.fita[self.cabeca]
            if (self.atual, leitura) in self.transicao:
                novo_estado, escrever, mover = self.transicao[(self.atual, leitura)]
                self.fita[self.cabeca] = escrever
                self.atual = novo_estado
                if mover == '>':
                    self.cabeca += 1
                elif mover == '<':
                    self.cabeca -= 1
            else:
                break
            passos += 1
    
    def obter_fita(self):
        return ''.join(self.fita).strip(self.marca_inicio).strip(self.vazio)
    
transicao_incremento = {
    ('q0', '1'): ('q0', '1', '>'),  # Continue movendo para a direita enquanto encontrar 1
    ('q0', '0'): ('q0', '0', '>'),  # Continue movendo para a direita enquanto encontrar 0
    ('q0', ' '): ('q1', ' ', '<'),  # Encontrou o espaço em branco, volta à esquerda para incrementar
    ('q1', '1'): ('q1', '0', '<'),  # Se encontrar 1, troque para 0 e continue para a esquerda
    ('q1', '0'): ('qf', '1', '>'),  # Se encontrar 0, troque para 1 e termine
    ('q1', '_'): ('qf', '1', '>'),  # Se encontrar o início da fita, adicione 1 no início
}

# Estados e alfabeto
estados_incremento = {'q0', 'q1', 'qf'}
alfabeto_entrada_incremento = {'0', '1'}
alfabeto_fita_incremento = {'0', '1', ' '}
finais_incremento = {'qf'}

def testar_maquina_turing_incremento(fita_inicial):
    maquina = MaquinaTuring(estados_incremento, alfabeto_entrada_incremento, alfabeto_fita_incremento, '_', ' ', transicao_incremento, 'q0', finais_incremento, fita_inicial)
    maquina.executar(max_passos=1000)
    return maquina.obter_fita()

# Testando novamente
print(f"Resultado do Teste 1: {testar_maquina_turing_incremento('101')}")  # Esperado: 110
print(f"Resultado do Teste 2: {testar_maquina_turing_incremento('111')}")  # Esperado: 1000
print(f"Resultado do Teste 3: {testar_maquina_turing_incremento('0')}")    # Esperado: 1